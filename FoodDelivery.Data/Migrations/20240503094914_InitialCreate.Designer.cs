// <auto-generated />
using System;
using FoodDelivery.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodDelivery.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240503094914_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FoodDelivery.Domain.Entities.Consumer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Consumer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "st. Second 34, Kiev",
                            Email = "tatiana@gamil.com",
                            IsDeleted = false,
                            Name = "Tetiana",
                            PhoneNumber = "+380556988797",
                            Surname = "Buchaka"
                        },
                        new
                        {
                            Id = 2,
                            Address = "st. Main 34, Kiev",
                            Email = "vladymyr@gamil.com",
                            IsDeleted = false,
                            Name = "Volodymyr",
                            PhoneNumber = "+380667566448",
                            Surname = "Vovk"
                        });
                });

            modelBuilder.Entity("FoodDelivery.Domain.Entities.Courier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Coordinates")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Courier", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Vasya@gamil.com",
                            IsDeleted = false,
                            Name = "Vasyl",
                            PhoneNumber = "+380556988742",
                            Status = 0,
                            Surname = "Savchuk"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Artem@gamil.com",
                            IsDeleted = false,
                            Name = "Artem",
                            PhoneNumber = "+380556985214",
                            Status = 0,
                            Surname = "Bublik"
                        });
                });

            modelBuilder.Entity("FoodDelivery.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<int?>("CourierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("Timestamp")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ConsumerId");

                    b.HasIndex("CourierId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("FoodDelivery.Domain.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantMenuItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("RestaurantMenuItemId");

                    b.ToTable("OrderItem", (string)null);
                });

            modelBuilder.Entity("FoodDelivery.Domain.Entities.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Restaurant", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "st. Second 1, Kiev",
                            Email = "ukrainiancuisine@gamil.com",
                            IsDeleted = false,
                            Name = "Ukrainian Cuisine",
                            PhoneNumber = "+380773698741",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "st. Main 198, Kiev",
                            Email = "sushistar@gamil.com",
                            IsDeleted = false,
                            Name = "Sushi Star",
                            PhoneNumber = "+380778899445",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = "st. Narrow 33, Kiev",
                            Email = "hitai@gamil.com",
                            IsDeleted = false,
                            Name = "HiTai",
                            PhoneNumber = "+380777412369",
                            Status = 0
                        });
                });

            modelBuilder.Entity("FoodDelivery.Domain.Entities.RestaurantMenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("RestaurantMenuItem", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Ukrainian Traditional meal",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Borch with cream",
                            Price = 85.549999999999997,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Original recipe",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Vareniki",
                            Price = 150.0,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Original recipe from Japan",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Sushi with avocado",
                            Price = 190.0,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 4,
                            Description = "Weight of set 500g.",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Sushi California",
                            Price = 230.0,
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 5,
                            Description = "Very hot and unforgettable",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Soup with Red Hot Chili Pepper",
                            Price = 350.0,
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 6,
                            Description = "Very popular meal from Thailand",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Noodles with seafood",
                            Price = 299.99000000000001,
                            RestaurantId = 3
                        });
                });

            modelBuilder.Entity("FoodDelivery.Domain.Entities.Order", b =>
                {
                    b.HasOne("FoodDelivery.Domain.Entities.Consumer", "Consumer")
                        .WithMany("Orders")
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FoodDelivery.Domain.Entities.Courier", "Courier")
                        .WithMany("Orders")
                        .HasForeignKey("CourierId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FoodDelivery.Domain.Entities.Restaurant", "Restaurant")
                        .WithMany("Orders")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Consumer");

                    b.Navigation("Courier");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("FoodDelivery.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("FoodDelivery.Domain.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FoodDelivery.Domain.Entities.RestaurantMenuItem", "RestaurantMenuItem")
                        .WithMany("OrderItems")
                        .HasForeignKey("RestaurantMenuItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("RestaurantMenuItem");
                });

            modelBuilder.Entity("FoodDelivery.Domain.Entities.RestaurantMenuItem", b =>
                {
                    b.HasOne("FoodDelivery.Domain.Entities.Restaurant", "Restaurant")
                        .WithMany("MenuItems")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("FoodDelivery.Domain.Entities.Consumer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("FoodDelivery.Domain.Entities.Courier", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("FoodDelivery.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("FoodDelivery.Domain.Entities.Restaurant", b =>
                {
                    b.Navigation("MenuItems");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("FoodDelivery.Domain.Entities.RestaurantMenuItem", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
